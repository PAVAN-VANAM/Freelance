// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Machine {
  id                Int                 @id @default(autoincrement())
  name              String
  type              String
  model             String
  serialNumber      String
  purchaseDate      DateTime
  manufacturer      String
  status            String              @default("operational") // 'operational', 'under_maintenance', etc.
  productionHistory ProductionHistory[]
  parts             Part[]
}

model ProductionHistory {
  id             Int      @id @default(autoincrement())
  machineId      Int
  name           String
  currentOutput  Int
  targetOutput   Int
  date           DateTime
  downtime       Int
  downtimeReason String
  machine        Machine  @relation(fields: [machineId], references: [id])
}

model Part {
  id            Int     @id @default(autoincrement())
  name          String  @db.VarChar(255)
  description   String  @db.Text
  manufacture   String  @db.VarChar(255)
  modelNumber   String  @db.VarChar(255)
  unitOfMeasure String  @db.VarChar(255)
  imageURL      String  @db.VarChar(255)
  stockLevel    Int     @db.Integer
  reorderPoint  Int     @db.Integer
  msl           Int     @db.Integer
  machineId     Int     @db.Integer
  machine       Machine @relation(fields: [machineId], references: [id])
}
